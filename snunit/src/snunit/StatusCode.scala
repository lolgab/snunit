package snunit

final class StatusCode(val value: Int) {
  override def toString(): String = s"StatusCode($value)"
  override def equals(x: Any): Boolean = x match {
    case code: StatusCode => code.value == value
    case _                => false
  }
  override def hashCode(): Int = value
}

object StatusCode {
  final val Continue = new StatusCode(100)
  final val SwitchingProtocols = new StatusCode(101)
  final val Processing = new StatusCode(102)
  final val OK = new StatusCode(200)
  final val Created = new StatusCode(201)
  final val Accepted = new StatusCode(202)
  final val NonAuthoritativeInformation = new StatusCode(203)
  final val NoContent = new StatusCode(204)
  final val ResetContent = new StatusCode(205)
  final val PartialContent = new StatusCode(206)
  final val MultiStatus = new StatusCode(207)
  final val AlreadyReported = new StatusCode(208)
  final val IMUsed = new StatusCode(226)
  final val MultipleChoices = new StatusCode(300)
  final val MovedPermanently = new StatusCode(301)
  final val Found = new StatusCode(302)
  final val SeeOther = new StatusCode(303)
  final val NotModified = new StatusCode(304)
  final val UseProxy = new StatusCode(305)
  final val TemporaryRedirect = new StatusCode(307)
  final val PermanentRedirect = new StatusCode(308)
  final val BadRequest = new StatusCode(400)
  final val Unauthorized = new StatusCode(401)
  final val PaymentRequired = new StatusCode(402)
  final val Forbidden = new StatusCode(403)
  final val NotFound = new StatusCode(404)
  final val MethodNotAllowed = new StatusCode(405)
  final val NotAcceptable = new StatusCode(406)
  final val ProxyAuthenticationRequired = new StatusCode(407)
  final val RequestTimeout = new StatusCode(408)
  final val Conflict = new StatusCode(409)
  final val Gone = new StatusCode(410)
  final val LengthRequired = new StatusCode(411)
  final val PreconditionFailed = new StatusCode(412)
  final val PayloadTooLarge = new StatusCode(413)
  final val UriTooLong = new StatusCode(414)
  final val UnsupportedMediaType = new StatusCode(415)
  final val RangeNotSatisfiable = new StatusCode(416)
  final val ExpectationFailed = new StatusCode(417)
  final val ImATeapot = new StatusCode(418)
  final val EnhanceYourCalm = new StatusCode(420)
  final val MisdirectedRequest = new StatusCode(421)
  final val UnprocessableEntity = new StatusCode(422)
  final val Locked = new StatusCode(423)
  final val FailedDependency = new StatusCode(424)
  final val TooEarly = new StatusCode(425)
  final val UpgradeRequired = new StatusCode(426)
  final val PreconditionRequired = new StatusCode(428)
  final val TooManyRequests = new StatusCode(429)
  final val RequestHeaderFieldsTooLarge = new StatusCode(431)
  final val RetryWith = new StatusCode(449)
  final val BlockedByParentalControls = new StatusCode(450)
  final val UnavailableForLegalReasons = new StatusCode(451)
  final val InternalServerError = new StatusCode(500)
  final val NotImplemented = new StatusCode(501)
  final val BadGateway = new StatusCode(502)
  final val ServiceUnavailable = new StatusCode(503)
  final val GatewayTimeout = new StatusCode(504)
  final val HttpVersionNotSupported = new StatusCode(505)
  final val VariantAlsoNegotiates = new StatusCode(506)
  final val InsufficientStorage = new StatusCode(507)
  final val LoopDetected = new StatusCode(508)
  final val BandwidthLimitExceeded = new StatusCode(509)
  final val NotExtended = new StatusCode(510)
  final val NetworkAuthenticationRequired = new StatusCode(511)
  final val NetworkReadTimeout = new StatusCode(598)
  final val NetworkConnectTimeout = new StatusCode(599)
}
