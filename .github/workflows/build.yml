name: ci

on:
  push

jobs:
  build:
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v2
    - name: Mill cache
      uses: actions/cache@v2
      with:
        path: ~/.mill
        key: mill-${{ hashFiles('.mill-version') }}
    - name: Ivy cache
      uses: actions/cache@v2
      with:
        path: ~/.cache/coursier
        key: ivy-${{ hashFiles('build.sc') }}
        restore-keys: |
          ivy-${{ hashFiles('build.sc') }}
          ivy
    - name: Compilation cache
      uses: actions/cache@v2
      with:
        path: ./out
        key: out
    - name: Install Dependencies
      run: |
        curl -sL https://nginx.org/keys/nginx_signing.key | sudo apt-key add -
        echo "deb https://packages.nginx.org/unit/ubuntu/ bionic unit" | sudo tee -a /etc/apt/sources.list.d/unit.list
        echo "deb-src https://packages.nginx.org/unit/ubuntu/ bionic unit" | sudo tee -a /etc/apt/sources.list.d/unit.list
        sudo apt-get update
        unit_version="1.26*"
        sudo apt-get install -y libuv1-dev unit=$unit_version unit-dev=$unit_version
    - uses: actions/setup-java@v1
      with:
        java-version: '8'
        architecture: x64
    - name: Check formatting
      run: 
        ./mill -i --disable-ticker -j 0 mill.scalalib.scalafmt.ScalafmtModule/checkFormatAll __.sources
        # ./mill -j 0 mill.scalalib.scalafmt.ScalafmtModule/checkFormatAll --sources buildSources
    - name: Check scalafix
      run: 
        ./mill -i --disable-ticker -j 0 __.fix --check
    - name: Compile
      run: 
        ./mill -i --disable-ticker -j 0 __.compile
    - name: Integration Test
      run: |
        sudo systemctl stop unit.service
        sudo unitd --user $USER
        sudo ./mill -i --disable-ticker -j 0 integration.test
    - name: Publish plugin shared locally
      run: 
        sudo ./mill -i --disable-ticker -j 0 snunit-plugins-shared.__.publishLocal
    - name: Compile Sbt plugin
      run: |
        (
          cd sbt-plugin
          sudo sbt compile
        )
  publish-sonatype:
    if: github.repository == 'lolgab/snunit' && contains(github.ref, 'refs/tags/')
    needs: build
    runs-on: ubuntu-18.04
    env:
      SONATYPE_PGP_PRIVATE_KEY: ${{ secrets.SONATYPE_PGP_PRIVATE_KEY }}
      SONATYPE_PGP_PRIVATE_KEY_PASSWORD: ${{ secrets.SONATYPE_PGP_PRIVATE_KEY_PASSWORD }}
      SONATYPE_USER: ${{ secrets.SONATYPE_USER }}
      SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
      LANG: "en_US.UTF-8"
      LC_MESSAGES: "en_US.UTF-8"
      LC_ALL: "en_US.UTF-8"
    steps:
      - uses: actions/checkout@v2
      - name: Mill cache
        uses: actions/cache@v2
        with:
          path: ~/.mill
          key: mill-${{ hashFiles('.mill-version') }}
      - name: Ivy cache
        uses: actions/cache@v2
        with:
          path: ~/.cache/coursier
          key: ivy-${{ hashFiles('build.sc') }}
          restore-keys: |
            ivy-${{ hashFiles('build.sc') }}
            ivy
      - name: Compilation cache
        uses: actions/cache@v2
        with:
          path: ./out
          key: out
      - uses: actions/setup-java@v1
        with:
          java-version: '8'
          architecture: x64
      - name: Publish to Maven Central
        run: |
          if [[ $(git tag --points-at HEAD) != '' ]]; then
            echo $SONATYPE_PGP_PRIVATE_KEY | base64 --decode > gpg_key
            gpg --import --no-tty --batch --yes gpg_key
            rm gpg_key
            ./mill -i --disable-ticker mill.scalalib.PublishModule/publishAll \
              --sonatypeCreds $SONATYPE_USER:$SONATYPE_PASSWORD \
              --gpgArgs --passphrase=$SONATYPE_PGP_PRIVATE_KEY_PASSWORD,--no-tty,--pinentry-mode,loopback,--batch,--yes,-a,-b \
              --publishArtifacts __.publishArtifacts \
              --readTimeout 600000 \
              --awaitTimeout 600000 \
              --release true \
              --signed true
            (
              cd sbt-plugin
              sudo sbt publishSigned sonatypeBundleRelease
            )
          fi
