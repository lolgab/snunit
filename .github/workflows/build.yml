name: ci

on:
  push

jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
    - name: Start SSH via tmate
      uses: P3TERX/ssh2actions@main
      # Send connection info to Telegram (optional)
      # You can find related documents here: https://core.telegram.org/bots
      env:
        TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
        TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        SONATYPE_PGP_PRIVATE_KEY: ${{ secrets.SONATYPE_PGP_PRIVATE_KEY }}
        SONATYPE_PGP_PRIVATE_KEY_PASSWORD: ${{ secrets.SONATYPE_PGP_PRIVATE_KEY_PASSWORD }}
        SONATYPE_USER: ${{ secrets.SONATYPE_USER }}
        SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
  publish-sonatype:
    if: github.repository == 'lolgab/snunit' && contains(github.ref, 'refs/tags/')
    needs: build
    runs-on: ubuntu-22.04
    env:
      SONATYPE_PGP_PRIVATE_KEY: ${{ secrets.SONATYPE_PGP_PRIVATE_KEY }}
      SONATYPE_PGP_PRIVATE_KEY_PASSWORD: ${{ secrets.SONATYPE_PGP_PRIVATE_KEY_PASSWORD }}
      SONATYPE_USER: ${{ secrets.SONATYPE_USER }}
      SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
      LANG: "en_US.UTF-8"
      LC_MESSAGES: "en_US.UTF-8"
      LC_ALL: "en_US.UTF-8"
    steps:
      - uses: actions/checkout@v2
      - name: Mill cache
        uses: actions/cache@v2
        with:
          path: ~/.mill
          key: mill-${{ hashFiles('.mill-version') }}
      - name: Ivy cache
        uses: actions/cache@v2
        with:
          path: ~/.cache/coursier
          key: ivy-${{ hashFiles('build.sc') }}
          restore-keys: |
            ivy-${{ hashFiles('build.sc') }}
            ivy
      - name: Compilation cache
        uses: actions/cache@v2
        with:
          path: ./out
          key: out
      - uses: actions/setup-java@v1
        with:
          java-version: '8'
          architecture: x64
      - name: Publish plugin shared locally
        run: ./mill -i --disable-ticker snunit-plugins-shared.__.publishLocal
      - name: Publish to Maven Central
        run: |
          if [[ $(git tag --points-at HEAD) != '' ]]; then
            echo $SONATYPE_PGP_PRIVATE_KEY | base64 --decode > gpg_key
            gpg --import --no-tty --batch --yes gpg_key
            rm gpg_key
            ./mill -i --disable-ticker mill.scalalib.PublishModule/publishAll \
              --sonatypeCreds $SONATYPE_USER:$SONATYPE_PASSWORD \
              --gpgArgs --passphrase=$SONATYPE_PGP_PRIVATE_KEY_PASSWORD,--no-tty,--pinentry-mode,loopback,--batch,--yes,-a,-b \
              --publishArtifacts __.publishArtifacts \
              --readTimeout 600000 \
              --awaitTimeout 600000 \
              --release true \
              --signed true
            (
              cd sbt-plugin
              sbt publishSigned sonatypeBundleRelease
            )
          fi
